
package practico6;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ListadoporPrecio extends javax.swing.JInternalFrame {

     private DefaultTableModel modelo= new DefaultTableModel();
    
    public boolean isCellEditable(int f, int c){
        return false;
    }
    public ListadoporPrecio() {
        initComponents();
        armarCabecera();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTPrecio1 = new javax.swing.JTextField();
        jTPrecio2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();

        setClosable(true);

        jLabel1.setText("Listado por Precio");

        jLabel2.setText("Entre $: ");

        jLabel3.setText("y");

        jTPrecio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTPrecio1ActionPerformed(evt);
            }
        });

        jTPrecio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTPrecio2ActionPerformed(evt);
            }
        });

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jTPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTPrecio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTPrecio1ActionPerformed
        // TODO add your handling code here:
         buscarPorRangoDePrecio();   
    }//GEN-LAST:event_jTPrecio1ActionPerformed

    private void jTPrecio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTPrecio2ActionPerformed
        // TODO add your handling code here:
         buscarPorRangoDePrecio();
    }//GEN-LAST:event_jTPrecio2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTPrecio1;
    private javax.swing.JTextField jTPrecio2;
    private javax.swing.JTable jTProductos;
    // End of variables declaration//GEN-END:variables
public void armarCabecera(){
   modelo.addColumn("Codigo");
   modelo.addColumn("Descripcion");
   modelo.addColumn("Precio");
   modelo.addColumn("Stock");
   jTProductos.setModel(modelo);
   }

private void buscarPorRangoDePrecio() {
    try {
        double precioMin = Double.parseDouble(jTPrecio1.getText());
        double precioMax = Double.parseDouble(jTPrecio2.getText());

        borrarFilas();

        for (Producto producto : DeTodoSA.listaProductos) {
            if (producto.getPrecio() >= precioMin && producto.getPrecio() <= precioMax) {
                modelo.addRow(new Object[]{
                    producto.getCodigo(),
                    producto.getDescripcion(),
                    producto.getPrecio(),
                    producto.getStock()
                });
            }
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese números válidos en los campos de precio.");
    }
    jTPrecio1.setText("");
    jTPrecio2.setText("");
}

private void borrarFilas(){
   int filas=jTProductos.getRowCount()-1;
       for(int f=filas;f>=0;f--){
           modelo.removeRow(f);
       }
   }


}
